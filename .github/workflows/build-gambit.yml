name: Build Gambit

on:
  push:
    branches: [ build-gambit, build-gambit-patched ]

jobs:
  Windows-mingw:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install MSYS2
      uses: eine/setup-msys2@v1
      with:
        update: true
        cache: true
        install: "autoconf git make tar mingw-w64-x86_64-gcc mingw-w64-x86_64-make mingw-w64-x86_64-libwinpthread-git"

    - name: Build Gambit
      run: ./.github/workflows/build-gambit.sh

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: gambit-win-mingw-x86_64
        path: dist/

  Windows-msvc:
    runs-on: windows-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install MSYS2
      uses: eine/setup-msys2@v1
      with:
        install: "autoconf make patch"
        update: true
        cache: true
        path-type: inherit
        msystem: MSYS

    - name: Build Gambit
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=14.16
        set CC="cl"
        msys2 ./.github/workflows/build-gambit.sh

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: gambit-win-msvc-x86_64
        path: dist/

  Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Build Gambit
      run: |
        ./.github/workflows/build-gambit.sh
        cd dist/
        tar -cvzf ../gambit-linux-x86_64.tar.gz ./
        cd ..

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: gambit-linux-x86_64
        path: gambit-linux-x86_64.tar.gz

  MacOS:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Build Gambit
      run: |
        export CC=gcc-9
        ./.github/workflows/build-gambit.sh
        cd dist/
        tar -cvzf ../gambit-macos-x86_64.tar.gz ./
        cd ..

    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: gambit-macos-x86_64
        path: gambit-macos-x86_64.tar.gz

  # CreateRelease:
  #   runs-on: ubuntu-latest
  #   needs: [Windows-mingw, Linux, macOS]

  #   steps:
  #   - name: Download Artifacts
  #     uses: actions/download-artifact@v2

  #   - name: Prepare Packages
  #     run: |
  #       cd gambit-win-mingw-x86_64
  #       zip -r ../gambit-win-mingw-x86_64.zip ./*
  #       cd ..

  #   - name: Publish Release Artifact
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       # Fake a package.json to make publish-release happy
  #       echo "{}" > package.json
  #       hash=${GITHUB_SHA:0:7}
  #       npx publish-release --token $GITHUB_TOKEN --repo gambit --owner daviwil --name latest-$hash --tag latest-$hash --notes="Automated Build" --assets gambit-linux-x86_64/gambit-linux-x86_64.tar.gz,gambit-macos-x86_64/gambit-macos-x86_64.tar.gz,gambit-win-mingw-x86_64.zip --reuseRelease --target_commitish $GITHUB_SHA
